{"version":3,"sources":["components/Header.js","components/KegDisplay/KegSelectPane/KegItem.js","components/KegDisplay/KegSelectPane/NewKegButton.js","components/KegDisplay/KegSelectPane/KegSelectPane.js","components/KegDisplay/SelectedKegPane/SellPintButton.js","components/KegDisplay/SelectedKegPane/ReStockButton.js","components/KegDisplay/SelectedKegPane/SelectedKegPane.js","components/KegDisplay/KegDisplay.js","components/NewKegForm.js","components/StateControl.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","style","textAlign","marginBottom","KegItem","props","Fragment","onClick","updateSelectedKeg","keg","border","width","backgroundColor","name","NewKegButton","display","justifyContent","alignItems","Button","marginTop","variant","newKeg","KegSelectPane","padding","kegs","map","key","id","updateCurrentPage","SellPintButton","marginRight","sellPint","selectedKeg","RestockButton","onSubmit","event","preventDefault","kegToReorder","v4","brand","price","abv","pints","type","SelectedKegPane","fontStyle","ReStockButton","KegDisplay","kegPane","Row","Col","className","NewKegForm","inputStyles","height","flexDirection","kegToOrder","target","value","placeholder","min","step","StateControl","page","setState","currentPage","removePint","newKegs","state","kegToUpdate","find","k","console","log","splice","indexOf","addNewKeg","push","this","Container","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff317ee0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header(){\r\n  const HeaderStyles = {\r\n    textAlign: \"Center\",\r\n    marginBottom: \"2em\"\r\n  };\r\n  return(\r\n    <h1 style={HeaderStyles}>Tap Room</h1>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; \r\n\r\nfunction KegItem(props) {\r\n  const kegItemStyles = {\r\n    border: \"1px solid black\",\r\n    width: \"100%\",\r\n    marginBottom: \".3em\",\r\n    backgroundColor: \"whiteSmoke\"\r\n  };\r\n  const onClick = () => {\r\n    props.updateSelectedKeg(props.keg);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <button onClick={onClick} style={kegItemStyles}>\r\n        <h3>{props.keg.name}</h3>\r\n      </button>\r\n      <br/>\r\n    </React.Fragment>\r\n  );\r\n}\r\nKegItem.propTypes = {\r\n  keg: PropTypes.object,\r\n  updateSelectedKeg: PropTypes.func\r\n}\r\n\r\nexport default KegItem;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction NewKegButton(props) {\r\n  const newKegButtonStyles = {\r\n    width: \"25em\",\r\n    marginTop: \".5em\"\r\n  }\r\n  const centerButton = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n\r\n  function onClick() {\r\n    props.newKeg(\"newKegForm\");\r\n  }\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <div style={centerButton}>\r\n        <Button style={newKegButtonStyles} variant=\"dark\" onClick={onClick}>Add New Keg</Button>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\nNewKegButton.propTypes = {\r\n  newKeg: PropTypes.func\r\n}\r\nexport default NewKegButton;","import React from \"react\";\r\nimport KegItem from \"./KegItem\";\r\nimport NewKegButton from \"./NewKegButton\";\r\n\r\nfunction KegSelectPane(props) {\r\n  const kegSelectPaneStyles = {\r\n    backgroundColor: \" #A7BEA9\",\r\n    padding: \"1em\"\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div style={kegSelectPaneStyles}>\r\n        {props.kegs.map(keg => \r\n          <KegItem keg={keg}\r\n          key={keg.id}\r\n          updateSelectedKeg={props.updateSelectedKeg}/>\r\n          )}\r\n      </div>\r\n      <NewKegButton newKeg={props.updateCurrentPage}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default KegSelectPane;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction SellPintButton(props){\r\n  const sellOnePintStyles = {\r\n    width: \"45%\",\r\n    marginRight: \"10%\"\r\n  }\r\n  \r\n  function onClick(){\r\n    props.sellPint(props.selectedKeg);\r\n  }\r\n\r\n  return(\r\n    <Button style={sellOnePintStyles} variant=\"dark\" onClick={onClick}>Sell One Pint</Button>\r\n  )\r\n}\r\nSellPintButton.propTypes = {\r\n  selectedKeg: PropTypes.object,\r\n  sellPint: PropTypes.func\r\n}\r\nexport default SellPintButton;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { v4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nfunction RestockButton(props) {\r\n  const restockButtonStyles = {\r\n    width: \"100%\"\r\n  }\r\n  const formStyles = {\r\n    width: \"45%\"\r\n  }\r\n  function handleAddKegFormSubmission(event) {\r\n    event.preventDefault();\r\n    const kegToReorder = {\r\n      id: v4(),\r\n      name: props.selectedKeg.name,\r\n      brand: props.selectedKeg.brand,\r\n      price:props.selectedKeg.price,\r\n      abv: props.selectedKeg.abv,\r\n      pints: 124\r\n    }\r\n    props.newKeg(kegToReorder);\r\n  }\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <form onSubmit={handleAddKegFormSubmission} style={formStyles}>\r\n        <Button type=\"submit\" variant=\"dark\" style={restockButtonStyles}>Restock This Keg</Button>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\nRestockButton.propTypes = {\r\n  selectedKeg: PropTypes.object,\r\n  newKeg: PropTypes.func\r\n}\r\nexport default RestockButton;","import React from \"react\"\r\nimport SellPintButton from \"./SellPintButton\";\r\nimport ReStockButton from \"./ReStockButton\";\r\n\r\nfunction SelectedKegPane(props) {\r\n  const selectProductPaneStyles = {\r\n    padding: '1em',\r\n    border: '1px solid black',\r\n    backgroundColor: '#A7BEA9',\r\n    textAlign: \"center\"\r\n  }\r\n  const companyStyle = {\r\n    fontStyle: \"italic\"\r\n  }\r\n  const buttonAlignment = {\r\n    display: \"flex\",\r\n    marginTop: \".5em\"\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n    <div style={selectProductPaneStyles}>\r\n      <h2>\"{props.selectedKeg.name}\"</h2>\r\n      <h4 style={companyStyle}>{props.selectedKeg.brand}</h4>\r\n      <h4>ABV: {props.selectedKeg.abv}</h4>\r\n      <h4>Price per pint: {props.selectedKeg.price}</h4>\r\n      <h4>Pints remaining: {props.selectedKeg.pints}</h4>\r\n    </div>\r\n    <div style={buttonAlignment}>\r\n      <SellPintButton sellPint={props.sellPint}\r\n      selectedKeg={props.selectedKeg}/>\r\n      <ReStockButton newKeg={props.newKeg} \r\n      selectedKeg={props.selectedKeg}/>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SelectedKegPane;","import React from \"react\";\r\nimport KegSelectPane from \"./KegSelectPane/KegSelectPane.js\";\r\nimport SelectedKegPane from \"./SelectedKegPane/SelectedKegPane.js\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nfunction KegDisplay(props){\r\n  const noSelectionStyle = {\r\n    padding: '1em',\r\n    border: '1px solid black',\r\n    backgroundColor: '#A7BEA9',\r\n    textAlign: \"center\"\r\n  }\r\n\r\n  let kegPane = null;\r\n  if (props.selectedKeg === null) {\r\n    kegPane = <h2 style={noSelectionStyle}>Please select a keg.</h2> \r\n  } else {\r\n    kegPane = <SelectedKegPane selectedKeg={props.selectedKeg}\r\n                sellPint={props.sellPint}\r\n                newKeg={props.newKeg}/>\r\n  }\r\n  return(\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col className=\"col-4\">\r\n          <KegSelectPane\r\n          kegs={props.kegs}\r\n          updateCurrentPage={props.updateCurrentPage}\r\n          updateSelectedKeg={props.updateSelectedKeg}/>\r\n        </Col>\r\n        <Col className=\"col-8\">\r\n          {kegPane}\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default KegDisplay;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { v4 } from \"uuid\";\r\n\r\nfunction NewKegForm(props) {\r\n  const centerItems = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\"\r\n  }\r\n  const inputStyles = {\r\n    marginBottom: \"1em\",\r\n    width: \"40%\",\r\n    height: \"3em\",\r\n    backgroundColor: \"whiteSmoke\"\r\n  }\r\n  const addKegButtonStyles = {\r\n    width: \"30%\",\r\n    marginTop: \".5%\",\r\n  }\r\n  \r\n  function handleAddKegFormSubmission(event) {\r\n    event.preventDefault();\r\n    const kegToOrder = {\r\n      id: v4(),\r\n      name: event.target.name.value,\r\n      brand: event.target.brand.value,\r\n      price: event.target.price.value,\r\n      abv: event.target.abv.value,\r\n      pints: 124\r\n    }\r\n    props.newKeg(kegToOrder);\r\n    props.updateCurrentPage(\"home\");\r\n  }\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <form style={centerItems} onSubmit={handleAddKegFormSubmission}>\r\n        <input style={inputStyles}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Product\"/>\r\n        <input style={inputStyles}\r\n          type=\"text\"\r\n          name=\"brand\"\r\n          placeholder=\"Brand\"/>\r\n        <input style={inputStyles}\r\n          type=\"number\"\r\n          name=\"price\"\r\n          min=\"0\"\r\n          step=\".01\"\r\n          placeholder=\"Price\" />\r\n        <input style={inputStyles}\r\n          type=\"number\"\r\n          name=\"abv\"\r\n          min=\"0\"\r\n          step=\".01\"\r\n          placeholder=\"ABV\" />\r\n          <Button style={addKegButtonStyles} \r\n          type=\"submit\" \r\n          variant=\"dark\">\r\n          Add Keg</Button>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default NewKegForm;","import React from \"react\";\r\nimport {v4} from \"uuid\";\r\nimport Header from \"./Header\";\r\nimport KegDisplay from \"./KegDisplay/KegDisplay\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport NewKegForm from \"./NewKegForm\";\r\n\r\nclass StateControl extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      currentPage: \"home\",\r\n      selectedKeg: null,\r\n      kegs: [\r\n        {\r\n          id: v4(),\r\n          name: \"Carina Peach Sour\",\r\n          brand: \"Ecliptic\",\r\n          price: 7.00,\r\n          abv: 5,\r\n          pints: 124\r\n        },\r\n        {\r\n          id: v4(),\r\n          name: \"Bud Light\",\r\n          brand: \"Anheuser–Busch\",\r\n          price: 6.00,\r\n          abv: 5,\r\n          pints: 124\r\n        },\r\n        {\r\n          id: v4(),\r\n          name: \"Pabst Blue Ribbon\",\r\n          brand: \"Pabst Brewing Company\",\r\n          price: 6.00,\r\n          abv: 4.8,\r\n          pints: 124\r\n        },\r\n        {\r\n          id: v4(),\r\n          name: \"Notorious Triple Ipa\",\r\n          brand: \"Boneyard Beer Company\",\r\n          price: 8.00,\r\n          abv: 12,\r\n          pints: 100\r\n        },\r\n        {\r\n          id: v4(),\r\n          name: \"Atlas Blackberry Cider\",\r\n          brand: \"Atlas Cider Company\",\r\n          price: 7.00,\r\n          abv: 6.2,\r\n          pints: 64\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  updateCurrentPage = (page) => {\r\n    this.setState({currentPage: page});\r\n  };\r\n\r\n  updateSelectedKeg = (keg) => {\r\n    this.setState({selectedKeg: keg});\r\n  };\r\n\r\n  removePint = (keg) => {\r\n    let newKegs = [...this.state.kegs];\r\n    let kegToUpdate = newKegs.find(k => k.id === keg.id);\r\n    console.log(kegToUpdate);\r\n    if(kegToUpdate.pints === 1){\r\n      this.setState({selectedKeg: null})\r\n      newKegs.splice(\r\n        newKegs.indexOf(kegToUpdate), 1);\r\n    } else {\r\n      kegToUpdate.pints -= 1;\r\n    }\r\n    this.setState({kegs: newKegs});\r\n  };\r\n\r\n  addNewKeg = (keg) => {\r\n    let newKegs = [...this.state.kegs];\r\n    keg.id = v4();\r\n    newKegs.push(keg);\r\n    this.setState({kegs: newKegs});\r\n  };\r\n\r\n  render() {\r\n    let currentPage = null;\r\n\r\n    switch(this.state.currentPage) { //Leaving as a switch for project scale ability \r\n      case \"home\":\r\n        currentPage = <KegDisplay\r\n        kegs={this.state.kegs}\r\n        updateSelectedKeg={this.updateSelectedKeg}\r\n        updateCurrentPage={this.updateCurrentPage}\r\n        sellPint={this.removePint}\r\n        newKeg={this.addNewKeg}\r\n        selectedKeg={this.state.selectedKeg}/>;\r\n        break;\r\n      case \"newKegForm\":\r\n        currentPage = <NewKegForm\r\n        sellPint={this.sellPint}\r\n        newKeg={this.addNewKeg}\r\n        updateCurrentPage={this.updateCurrentPage}/>;\r\n      break;\r\n      default:\r\n      break;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n          <Header/>\r\n          {currentPage}\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StateControl;","import React from \"react\";\r\nimport StateControl from \"./StateControl\";\r\n\r\nfunction App() {\r\n  return (\r\n    <StateControl/>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}